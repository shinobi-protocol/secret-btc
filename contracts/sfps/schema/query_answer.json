{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QueryAnswer",
  "anyOf": [
    {
      "type": "object",
      "required": [
        "max_interval"
      ],
      "properties": {
        "max_interval": {
          "type": "object",
          "required": [
            "max_interval"
          ],
          "properties": {
            "max_interval": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "current_highest_header_hash"
      ],
      "properties": {
        "current_highest_header_hash": {
          "type": "object",
          "required": [
            "hash",
            "height"
          ],
          "properties": {
            "hash": {
              "$ref": "#/definitions/Binary"
            },
            "height": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "hash_list_length"
      ],
      "properties": {
        "hash_list_length": {
          "type": "object",
          "required": [
            "length"
          ],
          "properties": {
            "length": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "hash_by_index"
      ],
      "properties": {
        "hash_by_index": {
          "type": "object",
          "required": [
            "hash",
            "height"
          ],
          "properties": {
            "hash": {
              "$ref": "#/definitions/Binary"
            },
            "height": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "verify_response_deliver_tx_proof"
      ],
      "properties": {
        "verify_response_deliver_tx_proof": {
          "type": "object",
          "required": [
            "decrypted_data"
          ],
          "properties": {
            "decrypted_data": {
              "$ref": "#/definitions/Binary"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "verify_subsequent_light_blocks"
      ],
      "properties": {
        "verify_subsequent_light_blocks": {
          "type": "object",
          "required": [
            "committed_hashes"
          ],
          "properties": {
            "committed_hashes": {
              "$ref": "#/definitions/CommittedHashes"
            }
          }
        }
      }
    }
  ],
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "Commit": {
      "type": "array",
      "items": {
        "type": "integer",
        "format": "uint8",
        "minimum": 0.0
      }
    },
    "CommittedHashes": {
      "type": "object",
      "required": [
        "commit",
        "hashes"
      ],
      "properties": {
        "commit": {
          "$ref": "#/definitions/Commit"
        },
        "hashes": {
          "$ref": "#/definitions/Hashes"
        }
      }
    },
    "Hashes": {
      "type": "object",
      "required": [
        "first_hash",
        "following_hashes"
      ],
      "properties": {
        "first_hash": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          }
        },
        "following_hashes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HeaderHashWithHeight"
          }
        }
      }
    },
    "HeaderHashWithHeight": {
      "type": "object",
      "required": [
        "hash",
        "height"
      ],
      "properties": {
        "hash": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          }
        },
        "height": {
          "type": "integer",
          "format": "int64"
        }
      }
    }
  }
}
