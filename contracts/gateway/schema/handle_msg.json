{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "HandleMsg",
  "anyOf": [
    {
      "type": "object",
      "required": [
        "create_viewing_key"
      ],
      "properties": {
        "create_viewing_key": {
          "type": "object",
          "required": [
            "entropy"
          ],
          "properties": {
            "entropy": {
              "type": "string"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "set_viewing_key"
      ],
      "properties": {
        "set_viewing_key": {
          "type": "object",
          "required": [
            "key"
          ],
          "properties": {
            "key": {
              "$ref": "#/definitions/ViewingKey"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "request_mint_address"
      ],
      "properties": {
        "request_mint_address": {
          "type": "object",
          "required": [
            "entropy"
          ],
          "properties": {
            "entropy": {
              "$ref": "#/definitions/Binary"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "verify_mint_tx"
      ],
      "properties": {
        "verify_mint_tx": {
          "type": "object",
          "required": [
            "height",
            "merkle_proof",
            "tx"
          ],
          "properties": {
            "height": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "merkle_proof": {
              "$ref": "#/definitions/MerkleProofMsg"
            },
            "tx": {
              "$ref": "#/definitions/Binary"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "release_incorrect_amount_b_t_c"
      ],
      "properties": {
        "release_incorrect_amount_b_t_c": {
          "type": "object",
          "required": [
            "fee_per_vb",
            "height",
            "merkle_proof",
            "recipient_address",
            "tx"
          ],
          "properties": {
            "fee_per_vb": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "height": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "merkle_proof": {
              "$ref": "#/definitions/MerkleProofMsg"
            },
            "recipient_address": {
              "type": "string"
            },
            "tx": {
              "$ref": "#/definitions/Binary"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "request_release_btc"
      ],
      "properties": {
        "request_release_btc": {
          "type": "object",
          "required": [
            "amount",
            "entropy"
          ],
          "properties": {
            "amount": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "entropy": {
              "$ref": "#/definitions/Binary"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "claim_released_btc"
      ],
      "properties": {
        "claim_released_btc": {
          "type": "object",
          "required": [
            "encryption_key",
            "fee_per_vb",
            "header_hash_index",
            "recipient_address",
            "tx_result_proof"
          ],
          "properties": {
            "encryption_key": {
              "$ref": "#/definitions/Binary"
            },
            "fee_per_vb": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "header_hash_index": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "recipient_address": {
              "type": "string"
            },
            "tx_result_proof": {
              "$ref": "#/definitions/TxResultProof"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "change_finance_admin"
      ],
      "properties": {
        "change_finance_admin": {
          "type": "object",
          "required": [
            "new_finance_admin"
          ],
          "properties": {
            "new_finance_admin": {
              "$ref": "#/definitions/ContractReference"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "change_owner"
      ],
      "properties": {
        "change_owner": {
          "type": "object",
          "required": [
            "new_owner"
          ],
          "properties": {
            "new_owner": {
              "$ref": "#/definitions/HumanAddr"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "set_suspension_switch"
      ],
      "properties": {
        "set_suspension_switch": {
          "type": "object",
          "required": [
            "suspension_switch"
          ],
          "properties": {
            "suspension_switch": {
              "$ref": "#/definitions/SuspensionSwitch"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "release_btc_by_owner"
      ],
      "properties": {
        "release_btc_by_owner": {
          "type": "object",
          "required": [
            "fee_per_vb",
            "max_input_length",
            "recipient_address",
            "tx_value"
          ],
          "properties": {
            "fee_per_vb": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "max_input_length": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "recipient_address": {
              "type": "string"
            },
            "tx_value": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      }
    }
  ],
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "BlockId": {
      "description": "BlockID",
      "type": "object",
      "required": [
        "hash"
      ],
      "properties": {
        "hash": {
          "type": "string"
        },
        "parts": {
          "anyOf": [
            {
              "$ref": "#/definitions/PartSetHeader"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    },
    "ContractReference": {
      "type": "object",
      "required": [
        "address",
        "hash"
      ],
      "properties": {
        "address": {
          "$ref": "#/definitions/HumanAddr"
        },
        "hash": {
          "type": "string"
        }
      }
    },
    "Header": {
      "type": "object",
      "required": [
        "app_hash",
        "chain_id",
        "consensus_hash",
        "data_hash",
        "evidence_hash",
        "height",
        "last_block_id",
        "last_commit_hash",
        "last_results_hash",
        "next_validators_hash",
        "proposer_address",
        "time",
        "validators_hash"
      ],
      "properties": {
        "app_hash": {
          "description": "State after txs from the previous block",
          "type": "string"
        },
        "chain_id": {
          "description": "Chain ID",
          "type": "string"
        },
        "consensus_hash": {
          "description": "Consensus params for the current block",
          "type": "string"
        },
        "data_hash": {
          "description": "Merkle root of transaction hashes",
          "type": "string"
        },
        "evidence_hash": {
          "description": "Hash of evidence included in the block",
          "type": "string"
        },
        "height": {
          "description": "Current block height",
          "type": "string"
        },
        "last_block_id": {
          "description": "Previous block info",
          "allOf": [
            {
              "$ref": "#/definitions/BlockId"
            }
          ]
        },
        "last_commit_hash": {
          "description": "Commit from validators from the last block",
          "type": "string"
        },
        "last_results_hash": {
          "description": "Root hash of all results from the txs from the previous block",
          "type": "string"
        },
        "next_validators_hash": {
          "description": "Validators for the next block",
          "type": "string"
        },
        "proposer_address": {
          "description": "Original proposer of the block",
          "type": "string"
        },
        "time": {
          "description": "Current timestamp",
          "type": "string"
        },
        "validators_hash": {
          "description": "Validators for the current block",
          "type": "string"
        },
        "version": {
          "description": "Header version",
          "anyOf": [
            {
              "$ref": "#/definitions/Version"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    },
    "HumanAddr": {
      "type": "string"
    },
    "MerkleProof": {
      "type": "object",
      "required": [
        "aunts",
        "index",
        "leaf_hash",
        "total"
      ],
      "properties": {
        "aunts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "index": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "leaf_hash": {
          "type": "string"
        },
        "total": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    "MerkleProofMsg": {
      "type": "object",
      "required": [
        "prefix",
        "siblings"
      ],
      "properties": {
        "prefix": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "siblings": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PartSetHeader": {
      "description": "Block parts header",
      "type": "object",
      "required": [
        "hash",
        "total"
      ],
      "properties": {
        "hash": {
          "type": "string"
        },
        "total": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        }
      }
    },
    "SuspensionSwitch": {
      "type": "object",
      "required": [
        "claim_release_btc",
        "release_incorrect_amount_btc",
        "request_mint_address",
        "request_release_btc",
        "verify_mint_tx"
      ],
      "properties": {
        "claim_release_btc": {
          "type": "boolean"
        },
        "release_incorrect_amount_btc": {
          "type": "boolean"
        },
        "request_mint_address": {
          "type": "boolean"
        },
        "request_release_btc": {
          "type": "boolean"
        },
        "verify_mint_tx": {
          "type": "boolean"
        }
      }
    },
    "TxResult": {
      "type": "object",
      "required": [
        "code",
        "data",
        "gas_used",
        "gas_wanted"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "data": {
          "type": "string"
        },
        "gas_used": {
          "type": "string"
        },
        "gas_wanted": {
          "type": "string"
        }
      }
    },
    "TxResultProof": {
      "type": "object",
      "required": [
        "headers",
        "merkle_proof",
        "tx_result"
      ],
      "properties": {
        "headers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Header"
          }
        },
        "merkle_proof": {
          "$ref": "#/definitions/MerkleProof"
        },
        "tx_result": {
          "$ref": "#/definitions/TxResult"
        }
      }
    },
    "Version": {
      "type": "object",
      "required": [
        "block"
      ],
      "properties": {
        "app": {
          "description": "App version",
          "default": "0",
          "type": "string"
        },
        "block": {
          "description": "Block version",
          "type": "string"
        }
      }
    },
    "ViewingKey": {
      "type": "string"
    }
  }
}
