{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "HandleMsg",
  "anyOf": [
    {
      "type": "object",
      "required": [
        "bitcoin_s_p_v_add_headers"
      ],
      "properties": {
        "bitcoin_s_p_v_add_headers": {
          "type": "object",
          "required": [
            "headers",
            "tip_height"
          ],
          "properties": {
            "headers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Binary"
              }
            },
            "tip_height": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "s_f_p_s_proxy_append_subsequent_hashes"
      ],
      "properties": {
        "s_f_p_s_proxy_append_subsequent_hashes": {
          "type": "object",
          "required": [
            "committed_hashes"
          ],
          "properties": {
            "committed_hashes": {
              "$ref": "#/definitions/CommittedHashes"
            }
          }
        }
      }
    }
  ],
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "Commit": {
      "type": "array",
      "items": {
        "type": "integer",
        "format": "uint8",
        "minimum": 0.0
      }
    },
    "CommittedHashes": {
      "type": "object",
      "required": [
        "commit",
        "hashes"
      ],
      "properties": {
        "commit": {
          "$ref": "#/definitions/Commit"
        },
        "hashes": {
          "$ref": "#/definitions/Hashes"
        }
      }
    },
    "Hashes": {
      "type": "object",
      "required": [
        "anchor_hash",
        "anchor_index",
        "following_hashes"
      ],
      "properties": {
        "anchor_hash": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          }
        },
        "anchor_index": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "following_hashes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HeaderHashWithHeight"
          }
        }
      }
    },
    "HeaderHashWithHeight": {
      "type": "object",
      "required": [
        "hash",
        "height"
      ],
      "properties": {
        "hash": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          }
        },
        "height": {
          "type": "integer",
          "format": "int64"
        }
      }
    }
  }
}
