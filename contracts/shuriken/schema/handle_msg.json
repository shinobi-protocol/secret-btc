{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "HandleMsg",
  "anyOf": [
    {
      "type": "object",
      "required": [
        "change_finance_admin"
      ],
      "properties": {
        "change_finance_admin": {
          "type": "object",
          "required": [
            "new_finance_admin"
          ],
          "properties": {
            "new_finance_admin": {
              "$ref": "#/definitions/ContractReference"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "bitcoin_s_p_v_add_headers"
      ],
      "properties": {
        "bitcoin_s_p_v_add_headers": {
          "type": "object",
          "required": [
            "headers",
            "tip_height"
          ],
          "properties": {
            "headers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Binary"
              }
            },
            "tip_height": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "s_f_p_s_proxy_append_subsequent_hashes"
      ],
      "properties": {
        "s_f_p_s_proxy_append_subsequent_hashes": {
          "type": "object",
          "required": [
            "committed_hashes",
            "last_header"
          ],
          "properties": {
            "committed_hashes": {
              "$ref": "#/definitions/CommittedHashes"
            },
            "last_header": {
              "$ref": "#/definitions/Header"
            }
          }
        }
      }
    }
  ],
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "BlockId": {
      "description": "BlockID",
      "type": "object",
      "required": [
        "hash"
      ],
      "properties": {
        "hash": {
          "type": "string"
        },
        "parts": {
          "anyOf": [
            {
              "$ref": "#/definitions/PartSetHeader"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    },
    "Commit": {
      "type": "array",
      "items": {
        "type": "integer",
        "format": "uint8",
        "minimum": 0.0
      }
    },
    "CommittedHashes": {
      "type": "object",
      "required": [
        "commit",
        "hashes"
      ],
      "properties": {
        "commit": {
          "$ref": "#/definitions/Commit"
        },
        "hashes": {
          "$ref": "#/definitions/Hashes"
        }
      }
    },
    "ContractReference": {
      "type": "object",
      "required": [
        "address",
        "hash"
      ],
      "properties": {
        "address": {
          "$ref": "#/definitions/HumanAddr"
        },
        "hash": {
          "type": "string"
        }
      }
    },
    "Hashes": {
      "type": "object",
      "required": [
        "first_hash",
        "following_hashes"
      ],
      "properties": {
        "first_hash": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          }
        },
        "following_hashes": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        }
      }
    },
    "Header": {
      "type": "object",
      "required": [
        "app_hash",
        "chain_id",
        "consensus_hash",
        "data_hash",
        "evidence_hash",
        "height",
        "last_block_id",
        "last_commit_hash",
        "last_results_hash",
        "next_validators_hash",
        "proposer_address",
        "time",
        "validators_hash"
      ],
      "properties": {
        "app_hash": {
          "description": "State after txs from the previous block",
          "type": "string"
        },
        "chain_id": {
          "description": "Chain ID",
          "type": "string"
        },
        "consensus_hash": {
          "description": "Consensus params for the current block",
          "type": "string"
        },
        "data_hash": {
          "description": "Merkle root of transaction hashes",
          "type": "string"
        },
        "evidence_hash": {
          "description": "Hash of evidence included in the block",
          "type": "string"
        },
        "height": {
          "description": "Current block height",
          "type": "string"
        },
        "last_block_id": {
          "description": "Previous block info",
          "allOf": [
            {
              "$ref": "#/definitions/BlockId"
            }
          ]
        },
        "last_commit_hash": {
          "description": "Commit from validators from the last block",
          "type": "string"
        },
        "last_results_hash": {
          "description": "Root hash of all results from the txs from the previous block",
          "type": "string"
        },
        "next_validators_hash": {
          "description": "Validators for the next block",
          "type": "string"
        },
        "proposer_address": {
          "description": "Original proposer of the block",
          "type": "string"
        },
        "time": {
          "description": "Current timestamp",
          "type": "string"
        },
        "validators_hash": {
          "description": "Validators for the current block",
          "type": "string"
        },
        "version": {
          "description": "Header version",
          "anyOf": [
            {
              "$ref": "#/definitions/Version"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    },
    "HumanAddr": {
      "type": "string"
    },
    "PartSetHeader": {
      "description": "Block parts header",
      "type": "object",
      "required": [
        "hash",
        "total"
      ],
      "properties": {
        "hash": {
          "type": "string"
        },
        "total": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        }
      }
    },
    "Version": {
      "type": "object",
      "required": [
        "block"
      ],
      "properties": {
        "app": {
          "description": "App version",
          "default": "0",
          "type": "string"
        },
        "block": {
          "description": "Block version",
          "type": "string"
        }
      }
    }
  }
}
